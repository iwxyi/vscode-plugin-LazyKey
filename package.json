{
    "name": "lazykey",
    "displayName": "LazyKey",
    "publisher": "mrxy001",
    "description": "Minimize keystrokes through automated keymaps",
    "version": "0.2.8",
    "keywords": [
        "lazy",
        "key",
        "auto",
        "macros"
    ],
    "engines": {
        "vscode": "^1.36.0"
    },
    "repository": "https://github.com/MRXY001/vscode-plugin-LazyKey",
    "categories": [
        "Keymaps"
    ],
    "icon": "images/icon.png",
    "activationEvents": [
        "onCommand:extension.ImLazy",
        "onCommand:extension.dotToPoint",
        "onLanguage:c",
        "onLanguage:cpp",
        "onLanguage:php",
        "onLanguage:java",
        "onLanguage:js",
        "onLanguage:javascript",
        "onLanguage:jsp",
        "onLanguage:cs",
        "onLanguage:verilog",
        "onLanguage:systemverilog"
    ],
    "main": "./extension.js",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "LazyKey",
            "properties": {
                "LazyKey.AllEnabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "enable LazyKey"
                },
                "LazyKey.DotToPoint": {
                    "type": "boolean",
                    "default": true,
                    "description": "Convert dot to point of C/C++/PHP class and point.\nIt needs double dot if one variable first uses in file"
                },
                "LazyKey.DotToPointDisabledOnce": {
                    "type": "boolean",
                    "default": false,
                    "description": "Disable converting dot to point once. (Don't modify)"
                },
                "LazyKey.NumberToParentheses": {
                    "type": "boolean",
                    "default": true,
                    "description": "Convert number 9 and 0 to ( and )"
                },
                "LazyKey.TabSkipRightParenthese": {
                    "type": "boolean",
                    "default": false,
                    "description": "Allow using Tab key to skip ) added by 9"
                },
                "LazyKey.SpaceFill": {
                    "type": "boolean",
                    "default": true,
                    "description": "Press space key to add parentheses of if/else/for/while/switch"
                },
                "LazyKey.AutoOperators": {
                    "type": "boolean",
                    "default": true,
                    "description": "Redefine operators：- / = / + / < / > / , / [ / ]"
                },
                "LazyKey.AutoSemicolon": {
                    "type": "boolean",
                    "default": true,
                    "description": "Put the semicolon at the end forcibly"
                },
                "LazyKey.SemicolonNewLine": {
                    "type": "boolean",
                    "default": false,
                    "description": "Auto create a new line after semicolon when declear a variable at the end of a block or before a blank line"
                },
                "LazyKey.AutoSuggestion": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show suggestions when filling operators"
                },
                "LazyKey.BranchCurlyBraceInSingleLine": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether the left curly braces { take a single line of if/for/while/foreach/switch"
                },
                "LazyKey.FunctionCurlyBraceInSingleLine": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether the left curly braces { take a single line of function"
                },
                "LazyKey.AutoCurlyBraceInSingleLine": {
                    "type": "boolean",
                    "default": true,
                    "description": "Auto detect whether the left curly braces { take a single line according above codes"
                },
                "LazyKey.SmarterEnter": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip the right parentheses with automated indentation when pressing enter key"
                },
                "LazyKey.SmarterTab": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip the right parentheses with comma when pressing tab key"
                },
                "LazyKey.SwitchSingleAndDoubleQuote": {
                    "type": "boolean",
                    "default": true,
                    "description": "Switch between single to double quote key"
                },
                "LazyKey.GenerateVariableName": {
                    "type": "boolean",
                    "default": true,
                    "description": "Auto generate variable name when pressing space key after the class type"
                },
                "LazyKey.CompleteFunctionParentheses": {
                    "type": "boolean",
                    "default": true,
                    "description": "Auto complete function's parntheses after complete"
                },
                "LazyKey.ChangeSymbol": {
                    "type": "boolean",
                    "default": true,
                    "description": "Convert Chinese symbols to English symbols, such as （）【】《》，。；、“”"
                },
                "LazyKey.ShowTipOnStart": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable opening toast at startup"
                }
            }
        },
        "commands": [
            {
                "command": "extension.switchLazyKey",
                "title": "I'm Lazy"
            },
            {
                "command": "extension.keybindings_enter",
                "title": "KeyBindings Enter"
            },
            {
                "command": "extension.keybindings_complete_function",
                "title": "KeyBindings Complete Funtion"
            },
            {
                "command": "extension.keybindings_tab",
                "title": "KeyBindings Tab"
            },
            {
                "command": "extension.keybindings_nine",
                "title": "KeyBindings Nine"
            },
            {
                "command": "extension.keybindings_zero",
                "title": "KeyBindings Zero"
            }
        ],
        "keybindings": [
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==c"
            },
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==cpp"
            },
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==java"
            },
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==js"
            },
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==javascript"
            },
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==php"
            },
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==cs"
            },
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==verilog"
            },
            {
                "command": "extension.keybindings_enter",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && !suggestWidgetVisible && editorLangId==systemverilog"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==c"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==cpp"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==java"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==js"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==javascript"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==php"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==cs"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==verilog"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "enter",
                "mac": "enter",
                "when": "editorTextFocus && suggestWidgetVisible && editorLangId==systemverilog"
            },
            {
                "command": "extension.keybindings_tab",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && !suggestWidgetVisible && editorLangId==c && !(tabnine.in-inline-suggestions && tabnine.inline-suggestion:enabled || tabnine.in-inline-suggestions && tabnine.snippet-suggestion:enabled) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_tab",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && !suggestWidgetVisible && editorLangId==cpp && !(tabnine.in-inline-suggestions && tabnine.inline-suggestion:enabled || tabnine.in-inline-suggestions && tabnine.snippet-suggestion:enabled) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_tab",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && !suggestWidgetVisible && editorLangId==java && !(tabnine.in-inline-suggestions && tabnine.inline-suggestion:enabled || tabnine.in-inline-suggestions && tabnine.snippet-suggestion:enabled) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_tab",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && !suggestWidgetVisible && editorLangId==js && !(tabnine.in-inline-suggestions && tabnine.inline-suggestion:enabled || tabnine.in-inline-suggestions && tabnine.snippet-suggestion:enabled) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_tab",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && !suggestWidgetVisible && editorLangId==javascript && !(tabnine.in-inline-suggestions && tabnine.inline-suggestion:enabled || tabnine.in-inline-suggestions && tabnine.snippet-suggestion:enabled) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_tab",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && !suggestWidgetVisible && editorLangId==php && !(tabnine.in-inline-suggestions && tabnine.inline-suggestion:enabled || tabnine.in-inline-suggestions && tabnine.snippet-suggestion:enabled) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_tab",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && !suggestWidgetVisible && editorLangId==cs && !(tabnine.in-inline-suggestions && tabnine.inline-suggestion:enabled || tabnine.in-inline-suggestions && tabnine.snippet-suggestion:enabled) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==c && !(tabnine.in-inline-suggestions && tabnine.inline-suggestion:enabled || tabnine.in-inline-suggestions && tabnine.snippet-suggestion:enabled) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==cpp && !(tabnine.tab-override && textInputFocus) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==java && !(tabnine.tab-override && textInputFocus) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==js && !(tabnine.tab-override && textInputFocus) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==javascript && !(tabnine.tab-override && textInputFocus) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==php && !(tabnine.tab-override && textInputFocus) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==cs && !(tabnine.tab-override && textInputFocus) && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==verilog && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_complete_function",
                "key": "tab",
                "mac": "tab",
                "when": "editorTextFocus && !hasNextTabstop && suggestWidgetVisible && editorLangId==systemverilog && !(config.github.copilot.inlineSuggest.enable)"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==c"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==cpp"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==java"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==js"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==javascript"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==php"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==cs"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==verilog"
            },
            {
                "command": "extension.keybindings_nine",
                "key": "9",
                "mac": "9",
                "when": "editorTextFocus && editorLangId==systemverilog"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==c"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==cpp"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==java"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==js"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==javascript"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==php"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==cs"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==verilog"
            },
            {
                "command": "extension.keybindings_zero",
                "key": "0",
                "mac": "0",
                "when": "editorTextFocus && editorLangId==systemverilog"
            }
        ]
    },
    "scripts": {
        "test": "node ./test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^5.2.6",
        "@types/node": "^10.12.21",
        "@types/vscode": "^1.36.0",
        "eslint": "^5.13.0",
        "glob": "^7.1.4",
        "mocha": "^10.2.0",
        "typescript": "^3.3.1",
        "vscode-test": "^1.2.0"
    },
    "dependencies": {
        "g": "^2.0.1",
        "generator-code": "^1.6.11",
        "vsce": "^2.9.1"
    }
}
